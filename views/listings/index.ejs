<% layout("./layouts/boilerplate") %>
<div id="mainContent">
        <div id="filters">
            <a class="filter col " href="/listings/category/Trending">
                <div><i class="fa-solid fa-fire"></i></div>
                <p>Trending</p>
            </a>
            <a class="filter col" href="/listings/category/Rooms">
                <div><i class="fa-solid fa-bed"></i></div>
                <p>Rooms</p>
            </a>
            <a class="filter col " href="/listings/category/Iconic Cities">
                <div><i class="fa-solid fa-mountain-city"></i></div>
                <p>Iconic Cities</p>
            </a>
            <a class="col filter d-none d-md-block" href="/listings/category/Mountain">
                <div><i class="fa-solid fa-mountain-sun"></i></div>
                <p>Mountain</p>
            </a>
            <a class="col filter d-none d-md-block" href="/listings/category/Castles">
                <div><i class="fa-brands fa-fort-awesome"></i></div>
                <p>Castles</p>
            </a>
            <a class="col filter d-none d-md-block" href="/listings/category/Luxury">
                <div><i class="fa-brands fa-fort-awesome"></i></div>
                <p>Luxury</p>
            </a>

            <a class="col filter d-none d-lg-block" href="/listings/category/Farm">
                <div><i class="fa-solid fa-tractor"></i></div>
                <p>Farms</p>
            </a>
            <a class="col filter d-none d-lg-block" href="/listings/category/Camping">
                <div><i class="fa-solid fa-campground"></i></div>
                <p>Camping</p>
            </a>
            <div class="tax-toggle">
                <div class="form-check-reverse form-switch">
                    <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault">
                    <label class="form-check-label" for="flexSwitchCheckDefault">Display Total after Taxes</label>
                </div>
            </div>
        </div>

        <div class="listings-wrapper container">
            <div class="row row-cols-lg-3 row-cols-md-2 row-cols-sm-1 justify-content-center">
                <% for(list of allListing){ %>
                    <a href="/listings/<%=list._id%>" class="listing-link ">
                        <div class="card h-100 w-100">
                            <img data-src="<%= list.image.url %>" class="card-img-top lazy-img img-fluid"
                                alt="Listing_images">
                            <div class="card-img-overlay">Click here</div>
                            <div class="card-body">
                                <h5 class="card-title">
                                    <%= list.title %>
                                </h5>
                                <p class="card-text">
                                    â‚¹<%= list.price.toLocaleString("en-IN") %>/night
                                        <i class="tax-info">&nbsp;&nbsp;+18% GST</i>
                                </p>
                                <!-- <a href="#" class="btn btn-primary">Go somewhere</a> -->
                            </div>
                        </div>
                    </a>
                    <% } %>
            </div>
        </div>
</div>
 <div id="searchOverlay">
        <button id="closeSearch" class="closeSearch btn" type="button">
            <strong>Close</strong>
        </button>
 </div>
<script>
    let taxSwitch = document.getElementById("flexSwitchCheckDefault");
    taxSwitch.addEventListener("click", () => {
        let taxInfo = document.getElementsByClassName("tax-info");
        for (info of taxInfo) {
            if (info.style.display != "inline") {
                info.style.display = "inline";
            } else {
                info.style.display = "none";
            }
        }
    });
    document.addEventListener("DOMContentLoaded", () => {
        const lazyImages = document.querySelectorAll(".lazy-img");

        const observer = new IntersectionObserver((entries, obs) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const img = entry.target;
                    img.src = img.dataset.src;
                    img.classList.add("loaded");
                    obs.unobserve(img);
                }
            });
        });

        lazyImages.forEach(img => observer.observe(img));
    });
</script>